// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated />

namespace Eco.Mods.TechTree
{
      using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using Eco.Core.Items;
    using Eco.Gameplay.Blocks;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.Components.Auth;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Economy;
    using Eco.Gameplay.Housing;
    using Eco.Gameplay.Interactions;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Modules;
    using Eco.Gameplay.Minimap;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Property;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Gameplay.Pipes.LiquidComponents;
    using Eco.Gameplay.Pipes.Gases;
    using Eco.Gameplay.Systems.Tooltip;
    using Eco.Shared;
    using Eco.Shared.Math;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Shared.View;
    using Eco.Shared.Items;
    using Eco.Gameplay.Pipes;
    using Eco.World.Blocks;
    
    [Serialized]
    [RequireComponent(typeof(PropertyAuthComponent))]
    [RequireComponent(typeof(MinimapComponent))]                
    [RequireComponent(typeof(LinkComponent))]                   
    [RequireComponent(typeof(CraftingComponent))]               
    [RequireComponent(typeof(SolidGroundComponent))]            
    [RequireComponent(typeof(PluginModulesComponent))]           
    [RequireComponent(typeof(RoomRequirementsComponent))]
    [RequireRoomContainment]
    [RequireRoomVolume(25)]                          
    [RequireRoomMaterialTier(0.2f, typeof(FertilizersLavishReqTalent), typeof(FertilizersFrugalReqTalent))]  
    public partial class FarmersTableObject : 
        WorldObject,    
        IRepresentsItem
    {
        public override LocString DisplayName { get { return Localizer.DoStr("Farmers Table"); } } 

        public override TableTextureMode TableTexture => TableTextureMode.Wood; 

        public virtual Type RepresentedItemType { get { return typeof(FarmersTableItem); } } 



        protected override void Initialize()
        {

            this.GetComponent<MinimapComponent>().Initialize(Localizer.DoStr("Crafting"));                

        }

        public override void Destroy()
        {
            base.Destroy();
        }
       
    }

    [Serialized]
    [LocDisplayName("Farmers Table")]
    [Ecopedia("Work Stations", "Craft Tables", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]                                                                           
    [AllowPluginModules(Tags = new[] { "BasicUpgrade", }, ItemTypes = new[] { typeof(FarmingUpgradeItem), 
typeof(FertilizersUpgradeItem), })]  
    public partial class FarmersTableItem :
        WorldObjectItem<FarmersTableObject> 
        ,IPersistentData 
    {
        public override LocString DisplayDescription => Localizer.DoStr("A basic workspace for crafting fertilizer and extracting seeds from crops.");

        static FarmersTableItem()
        {
            
        }

        

        [Serialized, TooltipChildren] public object PersistentData { get; set; } 
    }

    [RequiresSkill(typeof(FarmingSkill), 1)]     
    public partial class FarmersTableRecipe :
        RecipeFamily
    {
        public FarmersTableRecipe()
        {
            var product = new Recipe(
                "FarmersTable",
                Localizer.DoStr("Farmers Table"),
                new IngredientElement[]
                {
               new IngredientElement(typeof(DirtItem), 20, typeof(FarmingSkill), typeof(FarmingLavishResourcesTalent)),    
               new IngredientElement("HewnLog", 8, typeof(FarmingSkill), typeof(FarmingLavishResourcesTalent)), 
               new IngredientElement("WoodBoard", 8, typeof(FarmingSkill), typeof(FarmingLavishResourcesTalent)),    
                },
               new CraftingElement<FarmersTableItem>()
            );
            this.Initialize(Localizer.DoStr("Farmers Table"), typeof(FarmersTableRecipe));
            this.Recipes = new List<Recipe> { product };
            this.ExperienceOnCraft = 5;  
            this.LaborInCalories = CreateLaborInCaloriesValue(200, typeof(FarmingSkill), typeof(FarmersTableRecipe), this.UILink()); 
            this.CraftMinutes = CreateCraftTimeValue(typeof(FarmersTableRecipe), this.UILink(), 4, typeof(FarmingSkill), typeof(FarmingFocusedSpeedTalent), typeof(FarmingParallelSpeedTalent));     
            this.Initialize(Localizer.DoStr("Farmers Table"), typeof(FarmersTableRecipe));
            CraftingComponent.AddRecipe(typeof(WorkbenchObject), this);
        }
    }
}
