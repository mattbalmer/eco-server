// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated />

namespace Eco.Mods.TechTree
{
      using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using Eco.Core.Items;
    using Eco.Gameplay.Blocks;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.Components.Auth;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Economy;
    using Eco.Gameplay.Housing;
    using Eco.Gameplay.Interactions;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Modules;
    using Eco.Gameplay.Minimap;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Property;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Gameplay.Pipes.LiquidComponents;
    using Eco.Gameplay.Pipes.Gases;
    using Eco.Gameplay.Systems.Tooltip;
    using Eco.Shared;
    using Eco.Shared.Math;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Shared.View;
    using Eco.Shared.Items;
    using Eco.Gameplay.Pipes;
    using Eco.World.Blocks;
    

    [Serialized]
    [LocDisplayName("Computer Lab")]
    [Ecopedia("Crafted Objects", "Specialty", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]                                                                           
    public partial class ComputerLabItem :
        WorldObjectItem<ComputerLabObject> 
        ,IPersistentData 
    {
        public override LocString DisplayDescription => Localizer.DoStr("A place where you can sit all day and play video games! Or work on expert-level research.");

        static ComputerLabItem()
        {
            
        }

        

        [Serialized, TooltipChildren] public object PersistentData { get; set; } 
    }

    [RequiresSkill(typeof(ElectronicsSkill), 1)]     
    public partial class ComputerLabRecipe :
        RecipeFamily
    {
        public ComputerLabRecipe()
        {
            var product = new Recipe(
                "ComputerLab",
                Localizer.DoStr("Computer Lab"),
                new IngredientElement[]
                {
               new IngredientElement(typeof(ReinforcedConcreteItem), 100, typeof(ElectronicsSkill), typeof(ElectronicsLavishResourcesTalent)), 
               new IngredientElement(typeof(PlasticItem), 100, typeof(ElectronicsSkill), typeof(ElectronicsLavishResourcesTalent)), 
               new IngredientElement(typeof(AdvancedCircuitItem), 50, typeof(ElectronicsSkill), typeof(ElectronicsLavishResourcesTalent)),    
               new IngredientElement("CompositeLumber", 100, typeof(ElectronicsSkill), typeof(ElectronicsLavishResourcesTalent)),    
                },
               new CraftingElement<ComputerLabItem>()
            );
            this.Initialize(Localizer.DoStr("Computer Lab"), typeof(ComputerLabRecipe));
            this.Recipes = new List<Recipe> { product };
            this.ExperienceOnCraft = 40;  
            this.LaborInCalories = CreateLaborInCaloriesValue(5000, typeof(ElectronicsSkill), typeof(ComputerLabRecipe), this.UILink()); 
            this.CraftMinutes = CreateCraftTimeValue(typeof(ComputerLabRecipe), this.UILink(), 120, typeof(ElectronicsSkill), typeof(ElectronicsFocusedSpeedTalent), typeof(ElectronicsParallelSpeedTalent));     
            this.Initialize(Localizer.DoStr("Computer Lab"), typeof(ComputerLabRecipe));
            CraftingComponent.AddRecipe(typeof(ElectronicsAssemblyObject), this);
        }
    }
}
