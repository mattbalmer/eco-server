// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated />

namespace Eco.Mods.TechTree
{
        using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using Eco.Core.Items;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.Components.Auth;
    using Eco.Gameplay.Components.VehicleModules;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Shared.Math;
    using Eco.Shared.Networking;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    
    [Serialized]
    [LocDisplayName("Wood Cart")]
    [Weight(15000)]  
    [Ecopedia("Crafted Objects", "Vehicles", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]                    
    public partial class WoodCartItem : WorldObjectItem<WoodCartObject>
    {
        public override LocString DisplayDescription { get { return Localizer.DoStr("Small cart for hauling small loads."); } }
    }

    [RequiresSkill(typeof(BasicEngineeringSkill), 1)] 
    public class WoodCartRecipe : RecipeFamily
    {
        public WoodCartRecipe()
        {
            this.Initialize(Localizer.DoStr("Wood Cart"), typeof(WoodCartRecipe));
            this.Recipes = new List<Recipe>
            {
                new Recipe(
                    "WoodCart",
                    Localizer.DoStr("Wood Cart"),
                    new IngredientElement[]
                    {
                new IngredientElement("HewnLog", 4, typeof(BasicEngineeringSkill), typeof(BasicEngineeringLavishResourcesTalent)), 
                new IngredientElement("WoodBoard", 8, typeof(BasicEngineeringSkill), typeof(BasicEngineeringLavishResourcesTalent)),   
                new IngredientElement(typeof(WoodenWheelItem), 2, true),  
                    },
                new CraftingElement<WoodCartItem>()
                )
            };
            this.ExperienceOnCraft = 10;  
            this.LaborInCalories = CreateLaborInCaloriesValue(75, typeof(BasicEngineeringSkill), typeof(WoodCartRecipe), this.UILink()); 
            this.CraftMinutes = CreateCraftTimeValue(typeof(WoodCartRecipe), this.UILink(), 2, typeof(BasicEngineeringSkill), typeof(BasicEngineeringFocusedSpeedTalent), typeof(BasicEngineeringParallelSpeedTalent));    

            this.Initialize(Localizer.DoStr("Wood Cart"), typeof(WoodCartRecipe));
            CraftingComponent.AddRecipe(typeof(WainwrightTableObject), this);
        }
    }

    [Serialized]
    [RequireComponent(typeof(StandaloneAuthComponent))]
    [RequireComponent(typeof(PublicStorageComponent))]      
    [RequireComponent(typeof(MovableLinkComponent))]        
    [RequireComponent(typeof(VehicleComponent))]
    [RequireComponent(typeof(ModularStockpileComponent))]   
    [RequireComponent(typeof(TailingsReportComponent))]     
    public partial class WoodCartObject : PhysicsWorldObject, IRepresentsItem
    {
        static WoodCartObject()
        {
            WorldObject.AddOccupancy<WoodCartObject>(new List<BlockOccupancy>(0));
        }

        public override LocString DisplayName { get { return Localizer.DoStr("Wood Cart"); } }
        public Type RepresentedItemType { get { return typeof(WoodCartItem); } }


        private WoodCartObject() { }

        protected override void Initialize()
        {
            base.Initialize();
            
            this.GetComponent<PublicStorageComponent>().Initialize(12, 2000000);           
            this.GetComponent<VehicleComponent>().Initialize(12, 1, 1);
            this.GetComponent<VehicleComponent>().HumanPowered(1);           
            this.GetComponent<StockpileComponent>().Initialize(new Vector3i(2,1,2));  
        }
    }
}
