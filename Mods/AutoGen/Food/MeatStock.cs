// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated />

namespace Eco.Mods.TechTree
{
    using System.Collections.Generic;
    using Eco.Core.Items;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;

    [Serialized]
    [LocDisplayName("Meat Stock")]
    [Weight(800)]
    [Ecopedia("Food", "Ingredients", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]
    public partial class MeatStockItem : FoodItem
    {
        public override LocString DisplayDescription    => Localizer.DoStr("A meaty stock made from the flesh of animals.");
        
        public override float Calories                  => 600;
        public override Nutrients Nutrition             => new Nutrients() { Carbs = 3, Fat = 9, Protein = 8, Vitamins = 0};
    }

    [RequiresSkill(typeof(CookingSkill), 1)]
    public partial class MeatStockRecipe : RecipeFamily
    {
        public MeatStockRecipe()
        {
            var product = new Recipe(
                "MeatStock",
                Localizer.DoStr("Meat Stock"),
                new IngredientElement[]
                {
                    new IngredientElement(typeof(ScrapMeatItem), 8, typeof(CookingSkill), typeof(CookingLavishResourcesTalent)),   
                },
                new CraftingElement<MeatStockItem>(1)
                );

            this.Recipes = new List<Recipe> { product };
            this.LaborInCalories = CreateLaborInCaloriesValue(20, typeof(CookingSkill));
            this.CraftMinutes = CreateCraftTimeValue(typeof(MeatStockRecipe), 8, typeof(CookingSkill), typeof(CookingFocusedSpeedTalent), typeof(CookingParallelSpeedTalent));
            this.Initialize(Localizer.DoStr("Meat Stock"), typeof(MeatStockRecipe));
            CraftingComponent.AddRecipe(typeof(CastIronStoveObject), this);
        }
    }
}
