// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated />

namespace Eco.Mods.TechTree
{
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Linq;
    using Eco.Core.Items;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Mods.TechTree;
    using Eco.Shared.Items;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Shared.View;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.EcopediaRoot;

    [Serialized]
    [LocDisplayName("Stuffed Turkey")]
    [Weight(500)]
    [Ecopedia("Food", "Baking", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]
    public partial class StuffedTurkeyItem : FoodItem
    {
        public override LocString DisplayDescription            { get { return Localizer.DoStr("To give thanks for fact that this food items gives two nutrients more than other food at the same tier."); } }

        private static Nutrients nutrition = new Nutrients()    { Carbs = 17, Fat = 16, Protein = 20, Vitamins = 11};
        public override float Calories                          { get { return 1500; } }
        public override Nutrients Nutrition                     { get { return nutrition; } }
    }

    [RequiresSkill(typeof(AdvancedBakingSkill), 4)]    
    public partial class StuffedTurkeyRecipe :
        RecipeFamily
    {
        public StuffedTurkeyRecipe()
        {
            var product = new Recipe(
                "StuffedTurkey",
                Localizer.DoStr("Stuffed Turkey"),
                new IngredientElement[]
                {
            new IngredientElement(typeof(PrimeCutItem), 4, typeof(AdvancedBakingSkill), typeof(AdvancedBakingLavishResourcesTalent)), 
            new IngredientElement(typeof(BreadItem), 1, typeof(AdvancedBakingSkill), typeof(AdvancedBakingLavishResourcesTalent)), 
            new IngredientElement(typeof(VegetableMedleyItem), 1, typeof(AdvancedBakingSkill), typeof(AdvancedBakingLavishResourcesTalent)),   
                },
                    new CraftingElement<StuffedTurkeyItem>(1)  
                
            );
            this.Initialize(Localizer.DoStr("Stuffed Turkey"), typeof(StuffedTurkeyRecipe));
            this.Recipes = new List<Recipe> { product };
            this.LaborInCalories = CreateLaborInCaloriesValue(20, typeof(AdvancedBakingSkill), typeof(StuffedTurkeyRecipe), this.UILink()); 
            this.CraftMinutes = CreateCraftTimeValue(typeof(StuffedTurkeyRecipe), this.UILink(), 4, typeof(AdvancedBakingSkill), typeof(AdvancedBakingFocusedSpeedTalent), typeof(AdvancedBakingParallelSpeedTalent));    
            this.Initialize(Localizer.DoStr("Stuffed Turkey"), typeof(StuffedTurkeyRecipe));
            CraftingComponent.AddRecipe(typeof(BakeryOvenObject), this);
        }
    }
}
