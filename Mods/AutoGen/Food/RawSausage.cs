// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated />

namespace Eco.Mods.TechTree
{
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Linq;
    using Eco.Core.Items;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Mods.TechTree;
    using Eco.Shared.Items;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Shared.View;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.EcopediaRoot;

    [Serialized]
    [LocDisplayName("Raw Sausage")]
    [Weight(300)]
    [Ecopedia("Food", "Meat", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]
    public partial class RawSausageItem : FoodItem
    {
        public override LocString DisplayDescription            { get { return Localizer.DoStr("Ground meat stuffed into an intestine casing."); } }

        private static Nutrients nutrition = new Nutrients()    { Carbs = 0, Fat = 8, Protein = 4, Vitamins = 0};
        public override float Calories                          { get { return 500; } }
        public override Nutrients Nutrition                     { get { return nutrition; } }
    }

    [RequiresSkill(typeof(ButcherySkill), 1)]    
    public partial class RawSausageRecipe :
        RecipeFamily
    {
        public RawSausageRecipe()
        {
            var product = new Recipe(
                "RawSausage",
                Localizer.DoStr("Raw Sausage"),
                new IngredientElement[]
                {
            new IngredientElement(typeof(ScrapMeatItem), 3, typeof(ButcherySkill), typeof(ButcheryLavishResourcesTalent)),   
                },
                    new CraftingElement<RawSausageItem>(1),  
                    new CraftingElement<TallowItem>(1f)  
                
            );
            this.Initialize(Localizer.DoStr("Raw Sausage"), typeof(RawSausageRecipe));
            this.Recipes = new List<Recipe> { product };
            this.LaborInCalories = CreateLaborInCaloriesValue(20, typeof(ButcherySkill), typeof(RawSausageRecipe), this.UILink()); 
            this.CraftMinutes = CreateCraftTimeValue(typeof(RawSausageRecipe), this.UILink(), 0.8f, typeof(ButcherySkill), typeof(ButcheryFocusedSpeedTalent), typeof(ButcheryParallelSpeedTalent));    
            this.Initialize(Localizer.DoStr("Raw Sausage"), typeof(RawSausageRecipe));
            CraftingComponent.AddRecipe(typeof(ButcheryTableObject), this);
        }
    }
}
