// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// This file modified by @mbalmer eco-custom-server script
// <auto-generated />

namespace Eco.Mods.TechTree
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using Eco.Gameplay.Blocks;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Core.Items;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.World;
    using Eco.World.Blocks;
    using Eco.Gameplay.Pipes;

    /// <summary>Auto-generated class. Don't modify it! All your changes will be wiped with next update! Use Mods* partial methods instead for customization.</summary>

    [Serialized]
    [Solid, Wall, Diggable]
    public partial class ClayBlock :
        Block            
        , IRepresentsItem   
    {
        public Type RepresentedItemType { get { return typeof(ClayItem); } }  
    }

    [Serialized]
    [LocDisplayName("Clay")]
    [MaxStackSize(40)]                                       
    [Weight(22000)]      
    [Ecopedia("Natural Resources", "Blocks", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]                    
    [Currency][Tag("Currency")]                              
    [Tag("Excavatable", 1)]                         
    public partial class ClayItem :
    BlockItem<ClayBlock>
    {
        public override LocString DisplayNamePlural { get { return Localizer.DoStr("Clay"); } } 
        public override LocString DisplayDescription { get { return Localizer.DoStr("A very fine grained deposit of weathered bits of rock. Plastic when wet and brittle when dry, clay is impermeable to many liquids and useful for many industrial and environmental purposes."); } }

        public override bool CanStickToWalls { get { return false; } }  
    }

}
